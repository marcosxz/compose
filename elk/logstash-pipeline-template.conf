input {
    kafka {
        bootstrap_servers => "0.0.0.0:9092"
        topics => ["logstash"]
        group_id => "logstash.node01"
        enable_auto_commit => true
        auto_commit_interval_ms => 3000
        auto_offset_reset => "latest"
        consumer_threads => 1
        connections_max_idle_ms => 60000
        heartbeat_interval_ms => 3000
        decorate_events => "basic"
    }
}

filter {
    if [@metadata][kafka][topic] == "logstash" {
        json {
            source => "message"
            target => "[@metadata][message_ctx]"
        }
        if [@metadata][message_ctx][agent][type] == "filebeat" {
            if [@metadata][message_ctx][message] {
                mutate {
                    rename => {
                        "[@metadata][message_ctx]" => "[@metadata][filebeat_ctx]"
                    }
                    replace => {
                        "message" => "%{[@metadata][filebeat_ctx][message]}"
                    }
                }
            }
            if [@metadata][filebeat_ctx][log][file][path] == "/var/log/filebeat/nginx/access.log" {
                json {
                    source => "message"
                    target => "[@metadata][message_ctx]"
                }
                if [@metadata][message_ctx][app] in [ "zzz.nginx.access", "xxx.xxx.xxx" ] {
                    if [@metadata][message_ctx][status] in [ 200, 204 ] {
                        drop {}
                    }
                }
            }
            if [@metadata][filebeat_ctx][log][file][path] == "/var/log/filebeat/nginx/error.log" {
                mutate {
                    add_field => {
                        "[@metadata][message_ctx][app]" => "all.nginx.error"
                    }
                }
            }
        }

        if ![@metadata][message_ctx][app] {
            mutate {
                add_field => {
                    "[@metadata][message_ctx][app]" => "raw.log"
                }
            }
        }

        if [@metadata][message_ctx][app] {
            mutate {
                add_field => {
                    "[app]" => "%{[@metadata][message_ctx][app]}"
                    "[@metadata][app_index]" => "logstash-%{[@metadata][message_ctx][app]}-%{+YYYY.MM.dd}"
                }
            }
        }
         if [@metadata][message_ctx][ts] {
            mutate {
                add_field => {
                    "[ts]" => "%{[@metadata][message_ctx][ts]}"
                }
            }
        }
        if [@metadata][message_ctx][level] {
            mutate {
                add_field => {
                    "[level]" => "%{[@metadata][message_ctx][level]}"
                }
            }
        }
        if [@metadata][message_ctx][caller] {
            mutate {
                add_field => {
                    "[caller]" => "%{[@metadata][message_ctx][caller]}"
                }
            }
        }
        if [@metadata][message_ctx][geo_ip] {
            mutate {
                add_field => {
                    "[geo_ip]" => "%{[@metadata][message_ctx][geo_ip]}"
                }
            }
        }
        if [@metadata][message_ctx][remote_addr] {
            mutate {
                add_field => {
                    "[geo_ip]" => "%{[@metadata][message_ctx][remote_addr]}"
                }
            }
        }
    }

    if [geo_ip] {
        geoip {
            source => "geo_ip"
            cache_size => 65535
        }
    }
}

output {
    stdout {
        codec => rubydebug {
            metadata => false
        }
    }
    if [@metadata][kafka][topic] == "logstash" {
        elasticsearch {
            hosts => ["https://elasticsearch.node01:9200","https://elasticsearch.node02:9200","https://elasticsearch.node03:9200"]
            index => "%{[@metadata][app_index]}"
            retry_initial_interval => 3
            retry_max_interval => 64
            retry_on_conflict => 3
            timeout => 5
            user => "elastic"
            password => "elastic123"
            ssl => true
            cacert => "/usr/share/logstash/config/certificates/ca/ca.crt"
            ilm_enabled => "auto"
        }
    }
}