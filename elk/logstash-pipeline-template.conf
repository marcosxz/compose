input {
    syslog {
        type => "syslog"
    	host => "0.0.0.0"
        port => "514"
    }
    http {
        type => "httplog"
    	host => "0.0.0.0"
        port => "8088"
        additional_codecs => {"text/plain"=>"json"}
        codec => "json"
        threads => 8
        ssl => false
    }
    kafka {
        type => "kafkalog"
        bootstrap_servers => "0.0.0.0:9092"
        topics => ["logstash"]
        # topics_pattern => "logstash*"
        group_id => "logstash01"
        enable_auto_commit => true
        auto_commit_interval_ms => 3000
        auto_offset_reset => "latest"
        consumer_threads => 1
        connections_max_idle_ms => 60000
        heartbeat_interval_ms => 3000
        codec => "json"
    }
}

filter {
    # syslog 
    if [type] == "syslog" and [program] {
        mutate {
            add_field => { "[@metadata][es_index]" => "logstash-%{program}_%{+YYYYMMdd}" }
        }
        if [program] == "nginx_access" {
            json {
                source => "message"
                remove_field => ["message"]
            }
        }
    }

    # http
    if [type] == "httplog" and [app] {
        mutate {
            add_field => { "[@metadata][es_index]" => "logstash-%{app}_%{+YYYYMMdd}" }
        }
    }

    # kafka
    if [type] == "kafkalog" and [app] {
        mutate {
            add_field => { "[@metadata][es_index]" => "logstash-%{app}_%{+YYYYMMdd}" }
        }
    }

    # default
    if ([type] not in ["syslog", "httplog", "kafkalog"]) or (![program] and ![app]) {
        mutate {
            add_field => { "[@metadata][es_index]" => "logstash-default_%{+YYYYMMdd}" }
        }
    }

    # geoip parse
    if [ip] {
        geoip { 
            source => "ip"
        }
    }
    if [remote_addr] {
        geoip { 
            source => "remote_addr"
        }
    }

    # remove fields
    if [type] == "syslog" {
        mutate {
            remove_field => ["program"]
            remove_field => ["timestamp"]
            remove_field => ["severity"]
            remove_field => ["priority"]
            remove_field => ["facility"]
            remove_field => ["facility_label"]
            remove_field => ["logsource"]
            remove_field => ["severity_label"]
        }
    }
    if [type] == "httplog" {
        mutate {
            remove_field => ["headers"]
        }
    }
}

output {
    stdout { codec => rubydebug }

    if [type] == "syslog" {
        elasticsearch {
            hosts => ["http://elastic:changme@elasticsearch01:9200","http://elastic:changme@elasticsearch02:9200","http://elastic:changme@elasticsearch03:9200"]
            # document_id => ""
            # document_type => ""
            index => "%{[@metadata][es_index]}"
            retry_initial_interval => 3
            retry_max_interval => 64
            retry_on_conflict => 3
            timeout => 5
        }
    }

    if [type] == "httplog" {
        elasticsearch {
            hosts => ["http://elastic:changme@elasticsearch01:9200","http://elastic:changme@elasticsearch02:9200","http://elastic:changme@elasticsearch03:9200"]
            # document_id => ""
            # document_type => ""
            index => "%{[@metadata][es_index]}"
            retry_initial_interval => 3
            retry_max_interval => 64
            retry_on_conflict => 3
            timeout => 5
        }
    }

    if [type] == "kafkalog" {
        elasticsearch {
            hosts => ["http://elastic:changme@elasticsearch01:9200","http://elastic:changme@elasticsearch02:9200","http://elastic:changme@elasticsearch03:9200"]
            # document_id => ""
            # document_type => ""
            index => "%{[@metadata][es_index]}"
            retry_initial_interval => 3
            retry_max_interval => 64
            retry_on_conflict => 3
            timeout => 5
        }
    }
}